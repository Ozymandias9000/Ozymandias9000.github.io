/* src/components/icons/Codepen.svelte generated by Svelte v3.55.1 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	svg_element
} from "../../../_snowpack/pkg/svelte/internal.js";

function create_fragment(ctx) {
	let a;
	let svg;
	let path;
	let svg_width_value;
	let svg_height_value;
	let svg_class_value;

	return {
		c() {
			a = element("a");
			svg = svg_element("svg");
			path = svg_element("path");
			attr(path, "d", "M125.571 39.926L67.0715 0.925997C65.0744 -0.303094 62.9434 -0.314225 60.9285 0.925997L2.42867 39.926C0.928561 40.9256 0 42.712 0 44.4971V83.4971C0 85.2827 0.928561 87.0686 2.42895 88.0682L60.9288 127.074C62.9254 128.303 65.0566 128.314 67.0715 127.074L125.571 88.0682C127.071 87.0692 128 85.2827 128 83.4971V44.4971C128 42.712 127.071 40.9256 125.571 39.926ZM69.5001 15.7825L112.571 44.4971L93.3566 57.3548L69.5001 41.4259V15.7825ZM58.4999 15.7825V41.4256L34.6422 57.3545L15.4285 44.4968L58.4999 15.7825ZM10.9997 54.7828L24.7856 63.9972L10.9997 73.2117V54.7828ZM58.4999 112.212L15.4285 83.4971L34.6422 70.6399L58.4999 86.5689V112.212ZM64 76.9966L44.5715 63.9972L64 50.997L83.4285 63.997L64 76.9966ZM69.5001 112.212V86.5692L93.3566 70.6402L112.571 83.4974L69.5001 112.212ZM117 73.2117L103.214 63.9972L117 54.7828V73.2117Z");
			attr(svg, "viewBox", "0 0 128 128");
			attr(svg, "width", svg_width_value = !/*mobile*/ ctx[1] ? '32' : '24');
			attr(svg, "height", svg_height_value = !/*mobile*/ ctx[1] ? '32' : '24');
			attr(svg, "class", svg_class_value = "inline " + (!/*mobile*/ ctx[1] ? 'mr-8' : 'mr-4') + " transform transition-colors duration-2000 fill-current " + (/*checked*/ ctx[0] ? 'text-white' : 'text-black') + " hover:text-gray-400 cursor-pointer");
			attr(a, "href", "https://codepen.io/Aristocles");
			attr(a, "target", "_blank");
		},
		m(target, anchor) {
			insert(target, a, anchor);
			append(a, svg);
			append(svg, path);
		},
		p(ctx, [dirty]) {
			if (dirty & /*mobile*/ 2 && svg_width_value !== (svg_width_value = !/*mobile*/ ctx[1] ? '32' : '24')) {
				attr(svg, "width", svg_width_value);
			}

			if (dirty & /*mobile*/ 2 && svg_height_value !== (svg_height_value = !/*mobile*/ ctx[1] ? '32' : '24')) {
				attr(svg, "height", svg_height_value);
			}

			if (dirty & /*mobile, checked*/ 3 && svg_class_value !== (svg_class_value = "inline " + (!/*mobile*/ ctx[1] ? 'mr-8' : 'mr-4') + " transform transition-colors duration-2000 fill-current " + (/*checked*/ ctx[0] ? 'text-white' : 'text-black') + " hover:text-gray-400 cursor-pointer")) {
				attr(svg, "class", svg_class_value);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(a);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { checked } = $$props;
	let { mobile } = $$props;

	$$self.$$set = $$props => {
		if ('checked' in $$props) $$invalidate(0, checked = $$props.checked);
		if ('mobile' in $$props) $$invalidate(1, mobile = $$props.mobile);
	};

	return [checked, mobile];
}

class Codepen extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { checked: 0, mobile: 1 });
	}
}

export default Codepen;